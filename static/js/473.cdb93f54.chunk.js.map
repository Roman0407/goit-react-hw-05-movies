{"version":3,"file":"static/js/473.cdb93f54.chunk.js","mappings":"qPAmEA,UA3DqB,WAAO,IAAD,EACfA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkBJ,EAAAA,EAAAA,UAAQ,UAACG,EAASE,aAAV,aAAC,EAAgBC,MAApCC,GAAP,eACMC,EAAY,OAAGD,QAAH,IAAGA,EAAAA,EAAW,IAWhC,IAVAE,EAAAA,EAAAA,YAAU,WACN,KACIC,EAAAA,EAAAA,IAAgBZ,GAASa,MAAK,SAAAC,GAC1BV,EAASU,EAASC,KACrB,GAGJ,CAFC,MAAOC,GACLC,EAAAA,OAAAA,QAAe,QAClB,CACJ,GAAE,CAACjB,IAEAG,EAAO,CACP,IAAMe,EAASf,EAAMgB,YAAN,yCAAsDhB,EAAMgB,aAAgBC,EACrFC,EAAQlB,EAAMmB,aAAaC,QAAQ,GACzC,OACI,UAAC,IAAD,CAAKC,EAAE,OAAOC,QAAQ,OAAOC,QAAQ,OAArC,WACI,SAACC,EAAD,CAAgBC,GAAIlB,EAApB,sBACA,UAAC,IAAD,CAAKe,QAAQ,OAAOI,oBAAoB,YAAYC,SAAS,QAAQJ,QAAQ,OAA7E,WAEI,gBAAKK,IAAKb,EAAQc,IAAI,MAEtB,UAAC,IAAD,YACI,wBAAK7B,EAAM8B,SACX,uCAAuB,GAARZ,EAAf,QACA,sCACA,uBAAIlB,EAAM+B,YACV,oCAEA,SAAC,IAAD,CAAKC,GAAI,KAAMV,QAAQ,OAAOC,QAAQ,OAAtC,SACKvB,EAAMiC,OAAOC,KAAI,SAAAC,GACd,OAAO,wBAAkBA,EAAIC,MAAbD,EAAIE,GACvB,aAMb,UAAC,IAAD,CAAKC,aAAa,kBAAlB,WACI,mDACA,UAAC,IAAD,CAAKN,GAAI,KAAMV,QAAQ,OAAOI,oBAAoB,cAAcH,QAAQ,OAAOgB,GAAG,MAAMC,GAAG,MAAMC,GAAG,OAApG,WACI,SAACjB,EAAD,CAAgBC,GAAG,OAAnB,mBACA,SAACD,EAAD,CAAgBC,GAAG,UAAnB,4BAGR,SAAC,EAAAiB,SAAD,WACI,SAAC,KAAD,QAKf,CAEJ,EAGD,IAAMlB,GAAiBmB,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6Z","sources":["Pages/MovieDetails.jsx"],"sourcesContent":["import { Box } from \"components/Box\"\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { NavLink, Outlet, useLocation, useParams } from \"react-router-dom\"\nimport { useEffect, useState, Suspense } from \"react\";\nimport { getMovieDetails } from \"apiServise\";\nimport defaultImage from \"images/default-Img.jpg\";\nimport styled from \"styled-components\";\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const location = useLocation();\n    const [navPath] = useState(location.state?.from);\n    const backLinkHref = navPath ?? \"/\";\n    useEffect(() => {\n        try {\n            getMovieDetails(movieId).then(response => {\n                setMovie(response.data)\n            })\n        } catch (error) {\n            Notify.failure(\"OOOPS\")\n        }\n    }, [movieId])\n\n    if (movie) {\n        const poster = movie.poster_path ? `https://image.tmdb.org/t/p/w300${movie.poster_path}` : defaultImage;\n        const score = movie.vote_average.toFixed(1)\n        return (\n            <Box p='15px' display='grid' gridGap=\"10px\">\n                <StyledBackLink to={backLinkHref}>Go back</StyledBackLink>\n                <Box display='grid' gridTemplateColumns=\"250px 1fr\" maxWidth='600px' gridGap=\"10px\" >\n\n                    <img src={poster} alt=\"\" />\n\n                    <Box>\n                        <h2>{movie.title}</h2>\n                        <p>User score {score * 10}%</p>\n                        <h3>Overview</h3>\n                        <p>{movie.overview}</p>\n                        <h3>Genres</h3>\n\n                        <Box as={'ul'} display='flex' gridGap='10px'>\n                            {movie.genres.map(gen => {\n                                return <li key={gen.id}>{gen.name}</li>\n                            })}\n                        </Box>\n                    </Box>\n\n                </Box>\n\n                <Box borderBottom='1px solid black'>\n                    <p>Additional information</p>\n                    <Box as={'ul'} display='grid' gridTemplateColumns=\"100px 100px\" gridGap='10px' pl=\"5px\" mt='5px' mb='10px'>\n                        <StyledBackLink to=\"cast\">Cast</StyledBackLink>\n                        <StyledBackLink to=\"reviews\">Reviews</StyledBackLink>\n                    </Box>\n                </Box>\n                <Suspense>\n                    <Outlet />\n                </Suspense>\n\n            </Box>\n        )\n    }\n\n}\n\nexport default MovieDetails;\nconst StyledBackLink = styled(NavLink)`\n       padding: 5px;\n    width: 100px;\n    border-radius: 10px;\n    text-decoration: none;\n    background-color: #e2e2e2;\n    color: black;\n    text-align:center;\n    font-size: 18px;\n    :hover{\n         background-color: #804030;\n        color: #fff;\n        box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 2px 1px rgba(0, 0, 0, 0.2);\n    }\n`"],"names":["movieId","useParams","useState","movie","setMovie","location","useLocation","state","from","navPath","backLinkHref","useEffect","getMovieDetails","then","response","data","error","Notify","poster","poster_path","defaultImage","score","vote_average","toFixed","p","display","gridGap","StyledBackLink","to","gridTemplateColumns","maxWidth","src","alt","title","overview","as","genres","map","gen","name","id","borderBottom","pl","mt","mb","Suspense","styled","NavLink"],"sourceRoot":""}