{"version":3,"file":"static/js/279.e28717ee.chunk.js","mappings":"yOAEaA,EAAaC,EAAAA,GAAAA,KAAH,sGAOVC,EAAcD,EAAAA,GAAAA,MAAH,oEAKXE,EAAYF,EAAAA,GAAAA,OAAH,6Z,SCVTG,EAAa,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SACzB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAiB3C,OACI,UAACV,EAAD,CAAYK,SAPK,SAACM,GAClBA,EAAEC,iBACFP,EAASI,EAEZ,EAGG,WACI,SAACP,EAAD,CACIW,KAAK,OACLC,MAAOL,EACPM,SAAU,SAAAJ,IAlBI,SAACF,GAEvBD,EAD6B,KAAVC,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAElD,CAe4BO,CAAkBL,EAAEM,OAAOH,MAAQ,KAExD,SAACX,EAAD,CAAWU,KAAK,SAAhB,sBAQX,E,oCCiBD,EAhDe,WACX,OAAuBP,EAAAA,EAAAA,MACjBY,GADN,eACiCR,IAAI,SAErC,GAA4BS,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAsCF,EAAAA,EAAAA,UAASD,GAA/C,eAAOI,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WACN,GAAKJ,EAIL,KACIK,EAAAA,EAAAA,IAAgBL,GAAaM,MAAK,SAAAC,GACO,IAAjCA,EAASC,KAAKC,QAAQC,OAK1BX,EAAUQ,EAASC,KAAKC,SAJpBE,EAAAA,OAAAA,QAAA,iEAKP,GAGJ,CAFC,MAAOC,GACLD,EAAAA,OAAAA,QAAe,iCAClB,CAIJ,GAAE,CAACX,IAQJ,OACI,iCAEI,SAAClB,EAAD,CAAYC,SARK,SAACI,GACtBc,EAAed,EAElB,IAMQW,IAAU,SAACe,EAAA,EAAD,CAAWf,OAAQA,EAAQgB,MAAO,CAAEC,KAAMb,OAIhE,C","sources":["components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","Pages/Movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n   display: flex;\n   margin-left:10px;\n   margin-top: 10px;\n   gap: 10px;\n`\n\nexport const StyledInput = styled.input`\n    padding: 5px;\n    border-radius:10px;\n`\n\nexport const StyledBtn = styled.button`\n      padding: 5px;\n    width: 100px;\n    border-radius: 10px;\n    text-decoration: none;\n    background-color: #e2e2e2;\n    color: black;\n    text-align:center;\n    font-size: 20px;\n    :hover{\n         background-color: #00CCFF;\n        color: #fff;\n        box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 2px 1px rgba(0, 0, 0, 0.2);\n    }\n`","import { useSearchParams } from \"react-router-dom\";\nimport { StyledBtn, StyledForm, StyledInput } from \"./SearchForm.styled\";\n\n\nexport const SearchForm = ({ onSubmit }) => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\") ?? \"\";\n\n\n\n    const updateQueryString = (query) => {\n        const nextParams = query !== \"\" ? { query } : {};\n        setSearchParams(nextParams);\n    };\n\n\n\n    const hendleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit(query);\n\n    }\n\n    return (\n        <StyledForm onSubmit={hendleSubmit}>\n            <StyledInput\n                type=\"text\"\n                value={query}\n                onChange={e => { updateQueryString(e.target.value) }}\n            />\n            <StyledBtn type=\"submit\">Search</StyledBtn>\n        </StyledForm>\n\n\n\n\n\n    )\n}","import { useState, useEffect } from \"react\"\nimport { SearchForm } from \"components/SearchForm/SearchForm\"\nimport { getMovieByQuery } from \"apiServise\";\nimport { MovieList } from \"components/MovieList/MovieList\"\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst Movies = () => {\n    const [searchParams] = useSearchParams();\n    const paramsQuery = searchParams.get('query');\n\n    const [movies, setMovies] = useState(null);\n    const [searchQuery, setSearchQuery] = useState(paramsQuery);\n    const location = useLocation();\n\n\n    useEffect(() => {\n        if (!searchQuery) {\n            return;\n        }\n\n        try {\n            getMovieByQuery(searchQuery).then(response => {\n                if (response.data.results.length === 0) {\n                    Notify.failure(`We don't have any results rof this keyword, please try another`)\n                    return;\n                }\n\n                setMovies(response.data.results);\n            });\n        } catch (error) {\n            Notify.failure('OOOOOpps... Something wrong(((')\n        }\n\n\n\n    }, [searchQuery])\n\n\n    const hendleFormSubmit = (query) => {\n        setSearchQuery(query)\n\n    }\n\n    return (\n        <>\n\n            <SearchForm onSubmit={hendleFormSubmit} />\n            {movies && <MovieList movies={movies} state={{ from: location }} />}\n        </>\n\n    )\n}\n\n\nexport default Movies;"],"names":["StyledForm","styled","StyledInput","StyledBtn","SearchForm","onSubmit","useSearchParams","searchParams","setSearchParams","query","get","e","preventDefault","type","value","onChange","updateQueryString","target","paramsQuery","useState","movies","setMovies","searchQuery","setSearchQuery","location","useLocation","useEffect","getMovieByQuery","then","response","data","results","length","Notify","error","MovieList","state","from"],"sourceRoot":""}