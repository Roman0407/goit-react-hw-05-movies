{"version":3,"file":"static/js/186.813031d2.chunk.js","mappings":"gNAgDA,UA3CgB,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,IAZAC,EAAAA,EAAAA,YAAU,WACN,KACIC,EAAAA,EAAAA,IAAeN,GAASO,MAAK,SAAAC,GACzBJ,EAAWI,EAASC,KAAKC,QAC5B,GAGJ,CAFC,MAAOC,GACLC,EAAAA,OAAAA,QAAe,iCAClB,CAGJ,GAAE,CAACZ,IAEAG,EAEA,OACI,SAAC,IAAD,CAAKU,SAAS,SAAd,SAEwB,IAAnBV,EAAQW,QACF,SAAC,IAAD,CAAKC,GAAI,KAAT,SACEZ,EAAQa,KAAI,SAAAC,GAET,OAAO,2BACH,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFCF,EAAOG,GAI1B,OAEF,sEAUtB,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useParams } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport { getMovieReview } from \"apiServise\"\nimport { Box } from \"components/Box\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState(null);\n\n    useEffect(() => {\n        try {\n            getMovieReview(movieId).then(response => {\n                setReviews(response.data.results);\n            })\n        } catch (error) {\n            Notify.failure('OOOOOpps... Something wrong(((');\n        }\n\n\n    }, [movieId])\n\n    if (reviews) {\n\n        return (\n            <Box maxWidth='1000px'>\n\n                {reviews.length !== 0\n                    ? (<Box as={\"ul\"}>\n                        {reviews.map(review => {\n\n                            return <li key={review.id}>\n                                <h3>Author: {review.author}</h3>\n                                <p>{review.content}</p>\n                            </li>\n                        })}\n                    </Box>)\n                    : (<p>We don't have any reviews for this movie.</p>)}\n\n            </Box>\n\n\n\n        )\n    }\n\n\n}\n\nexport default Reviews;"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReview","then","response","data","results","error","Notify","maxWidth","length","as","map","review","author","content","id"],"sourceRoot":""}